
MODULE main
VAR
  Pedestrian_Observed : boolean;
  Car_Observed : boolean;
  Stop_Sign_Observed: boolean;
  Chair: boolean;
  Action : {Stop, Move_forward, Turn_left, Turn_right, Approach_stop_sign};

ASSIGN
  init(Car_Observed) := FALSE;
  next(Car_Observed) :=
    case
      TRUE: {TRUE, FALSE};
    esac;

  init(Pedestrian_Observed) := FALSE;
  next(Pedestrian_Observed) :=
    case
      TRUE : {TRUE, FALSE};
    esac;

  init(Stop_Sign_Observed) := FALSE;
  next(Stop_Sign_Observed) :=
    case
      TRUE: {TRUE, FALSE};
    esac;

  init(Chair) := FALSE;
  next(Chair) :=
    case
      TRUE: {TRUE, FALSE};
    esac;

  init(Action) := Stop;
  next(Action) :=
    case
      Pedestrian_Observed & !Chair : {Turn_left};
      Pedestrian_Observed & Chair : {Turn_left};
      !Pedestrian_Observed & Chair : {Turn_right};
      TRUE : {Stop, Move_forward, Approach_stop_sign};
    esac;

SPEC
  AG (Pedestrian_Observed -> AF Action = Turn_left);

SPEC
  AG (Chair & !Pedestrian_Observed -> AF Action = Turn_right);

SPEC
  AG (Pedestrian_Observed & Chair -> AF Action = Turn_left);

SPEC
  AG (!Pedestrian_Observed & !Chair -> AF (Action = Stop | Action = Move_forward | Action = Approach_stop_sign));