
MODULE main
VAR
  Pedestrian_Observed : boolean;
  Car_Observed : boolean;
  Stop_Sign_Observed: boolean;
  Action : {Stop, Move_forward, Turn_left, Turn_right};

ASSIGN
  init(Car_Observed) := FALSE;
  next(Car_Observed) :=
    case
      TRUE: {TRUE, FALSE};
    esac;

  init(Pedestrian_Observed) := FALSE;
  next(Pedestrian_Observed) :=
    case
      TRUE : {TRUE, FALSE};
    esac;

  init(Stop_Sign_Observed) := FALSE;
  next(Stop_Sign_Observed) :=
    case
      TRUE: {TRUE, FALSE};
    esac;

  init(Action) := Stop;
  next(Action) :=
    case
      Stop_Sign_Observed & !Car_Observed & !Pedestrian_Observed : Turn_left;
      Stop_Sign_Observed : Stop;
      !Stop_Sign_Observed & !Car_Observed & !Pedestrian_Observed : Move_forward;
      TRUE : Stop;
    esac;


LTLSPEC NAME spec1 := G (! (Action=Move_forward | Action=Turn_left | Action=Turn_right) &  Pedestrian_Observed)

LTLSPEC NAME spec2 := G (Stop_Sign_Observed -> F(Action = Stop));

LTLSPEC NAME spec3 := G (F(! Pedestrian_Observed & ! Car_Observed) -> F ! (Action=Stop) )